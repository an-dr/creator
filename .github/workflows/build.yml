name: Build

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    name: Build and Store Artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-musl, x86_64-pc-windows-gnu]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: 'true'
          toolchain: stable


      - name: ⚙️ Install cross-compilation tools (Windows only)
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: ⚙️ Install target
        run: rustup target add ${{ matrix.target }}

      - name: 🔨 Build
        run: cargo build --release --target ${{ matrix.target }}
        
      - name: 📂 Create artifact archive (Windows)
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: |
          mkdir -p artifacts
          zip -j artifacts/creator-win_x86_64.zip target/${{ matrix.target }}/release/creator.exe
          
      - name: 📂 Create artifact archive (Linux)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          mkdir -p artifacts
          zip -j artifacts/creator-linux_x86_64.zip target/${{ matrix.target }}/release/creator
      
      - name: 📤 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: artifacts/**


  build-wix-installer:
    name: Build Windows Installer
    uses: ./.github/workflows/win-package-msi.yml
    with:
      release: true

  release:
    name: Create GitHub Release
    needs: [build, build-wix-installer]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⬇️ Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: ⬇️ Download MSI installer
        uses: actions/download-artifact@v3
        with:
          name: WinInstaller
          path: ./installer

      - name: 🚀 Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        run: |
          VERSION=${{ github.ref_name }}
          gh release create "$VERSION" \
            ./artifacts/x86_64-unknown-linux-musl/** \
            ./artifacts/x86_64-pc-windows-gnu/** \
            ./installer/*.msi \
            --title "Release $VERSION" \
            --notes "Automated release of version $VERSION."
